USE Inventory_DB;

--The Agent who have maximum customers.
SELECT * FROM AGENTS
WHERE AGENT_CODE =
	(SELECT AGENT_CODE
	FROM
	(SELECT AGENT_CODE,COUNT(CUST_CODE) MAX_CUST
	FROM dbo.ORDERS
	GROUP BY AGENT_CODE
	) OD1
	WHERE MAX_CUST =
	(SELECT MAX(MAX_CUST) FROM
	(SELECT AGENT_CODE,COUNT(CUST_CODE) MAX_CUST
	FROM dbo.ORDERS
	GROUP BY AGENT_CODE
	) OD));

--The Agent who have maximum customers using with clause.
WITH Max_customer (AGENT_CODE,MAX_CUST) AS
	(SELECT AGENT_CODE,COUNT(CUST_CODE) MAX_CUST
	FROM dbo.ORDERS
	GROUP BY AGENT_CODE)
SELECT * FROM AGENTS
WHERE AGENT_CODE =
	(SELECT AGENT_CODE FROM Max_customer
		WHERE MAX_CUST =(SELECT MAX(MAX_CUST) FROM	Max_customer))


-- Largest order and smallest order.
SELECT ORD_DATE, TOTAL AS LARGEST_AND_SMALLEST_ORDERS
FROM( SELECT ORD_DATE,SUM(ORD_AMOUNT) AS TOTAL FROM ORDERS GROUP BY ORD_DATE) T
WHERE TOTAL
IN
(
	(SELECT MAX(TOTAL) FROM (SELECT SUM(ORD_AMOUNT) TOTAL FROM ORDERS GROUP BY ORD_DATE)A),
	(SELECT MIN(TOTAL) FROM (SELECT SUM(ORD_AMOUNT) TOTAL FROM ORDERS GROUP BY ORD_DATE)A)
);

-- Largest order and smallest order using with clause.
WITH Total_ord_amt (TOTAL) AS
(SELECT SUM(ORD_AMOUNT) TOTAL FROM ORDERS GROUP BY ORD_DATE)
SELECT ORD_DATE, TOTAL AS LARGEST_AND_SMALLEST_ORDERS
FROM( SELECT ORD_DATE,SUM(ORD_AMOUNT) AS TOTAL FROM ORDERS GROUP BY ORD_DATE) T
WHERE TOTAL
IN
(
	(SELECT MAX(TOTAL) FROM Total_ord_amt),
	(SELECT MIN(TOTAL) FROM Total_ord_amt)
)

--The Customer who generated the largest and smallest order (determined by Order Amount).
--Return: Customer Code | NAME | Largest Order NUMBER | Largest Order Date | Largest Order Amt | Smallest Order NUMBER | Smallest Order Date | Smallest Order Amt

SELECT CUSTOMER.CUST_CODE, CUST_NAME, 
CASE
	WHEN ORD_AMOUNT = (SELECT MAX(ORD_AMOUNT) FROM ORDERS) THEN ORD_NUM
	ELSE NULL
END 'Largest Order NUMBER',
CASE
	WHEN ORD_AMOUNT = (SELECT MAX(ORD_AMOUNT) FROM ORDERS) THEN ORD_DATE
	ELSE NULL
END 'Largest Order Date',
CASE
	WHEN ORD_AMOUNT = (SELECT MAX(ORD_AMOUNT) FROM ORDERS) THEN ORD_AMOUNT
	ELSE NULL
END 'Largest Order Amt',
CASE
	WHEN ORD_AMOUNT = (SELECT MIN(ORD_AMOUNT) FROM ORDERS) THEN ORD_NUM
	ELSE NULL
END 'Smallest Order NUMBER',
CASE
	WHEN ORD_AMOUNT = (SELECT MIN(ORD_AMOUNT) FROM ORDERS) THEN ORD_DATE
	ELSE NULL
END 'Smallest Order Date',

CASE
	WHEN ORD_AMOUNT = (SELECT MIN(ORD_AMOUNT) FROM ORDERS) THEN ORD_AMOUNT
	ELSE NULL
END 'Smallest Order Amt'
FROM ORDERS
JOIN CUSTOMER ON ORDERS.CUST_CODE=CUSTOMER.CUST_CODE
WHERE ORD_AMOUNT IN (
(SELECT MIN(ORD_AMOUNT) FROM ORDERS),
(SELECT MAX(ORD_AMOUNT) FROM ORDERS)
)

--The Agents who generated the largest and smallest orders on each date.
--Return: Agent Code | name | order no. | highest on/lowest on | order date.

SELECT A.AGENT_CODE,AGENT_NAME, ORD_NUM,
CASE
	WHEN RNK1 = 1 THEN 'highest on'
	WHEN RNK2 = 1 THEN 'lowest on'
END AS ORD_VAL,
ORD_AMOUNT
FROM
(
	SELECT *,
	RANK() OVER(PARTITION BY ORD_DATE ORDER BY ORD_AMOUNT DESC) RNK1,
	RANK() OVER(PARTITION BY ORD_DATE ORDER BY ORD_AMOUNT) RNK2
	FROM ORDERS
) A
JOIN AGENTS ON (AGENTS.AGENT_CODE=A.AGENT_CODE)
WHERE RNK1 = 1 OR RNK2 = 1;

--The agents who have highest (top 5) and smallest (last 5) commission rates, without using top, limit or similar keywords
--Return: Agent Code | name | commission
SELECT A.AGENT_CODE,A.AGENT_NAME,A.COMMISSION FROM
( SELECT *, RANK() OVER(ORDER BY COMMISSION DESC) rnk FROM AGENTS ) A
JOIN
( SELECT *,RANK() OVER(ORDER BY COMMISSION) rnk FROM AGENTS ) B
ON (A.AGENT_CODE=B.AGENT_CODE)
WHERE A.rnk < 6 OR B.rnk <6;

SELECT A.AGENT_CODE,A.AGENT_NAME,A.COMMISSION FROM
(
	SELECT *, 
	RANK() OVER(ORDER BY COMMISSION DESC) rnk1,
	RANK() OVER(ORDER BY COMMISSION ASC) rnk2
	FROM AGENTS
) A
WHERE rnk1<6 OR rnk2 <6;


